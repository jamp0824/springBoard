package ino.web.freeBoard.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.eclipse.jdt.internal.compiler.ast.SynchronizedStatement;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.servlet.ModelAndView;

import ino.web.freeBoard.dto.Criteria;
import ino.web.freeBoard.dto.FreeBoardDto;
import ino.web.freeBoard.dto.PageMaker;
import ino.web.freeBoard.service.FreeBoardService;

@Controller
public class FreeBoardController {

	@Autowired
	private FreeBoardService freeBoardService;

	// 게시물 메인페이지
	@RequestMapping("/main.ino")
	public ModelAndView main(HttpServletRequest request,
			Criteria cri/* SearchCriteria scri */) {
		// 현재 페이지 번호와 페이지당 보여줄 게시글 수가 담긴 Criteria 객체를 사용한다.
		ModelAndView mav = new ModelAndView("/main.ino");
		// List list = freeBoardService.freeBoardList();
		/* List list = freeBoardService.list(scri); */
		PageMaker pageMaker = new PageMaker();
		//PageMaker()객체를 생성한다.
		/* pageMaker.setCri(scri); */
		pageMaker.setCri(cri);

		//page와 perPageNum을 셋팅해준다.
		pageMaker.setTotalCount(freeBoardService.countBoardList());
		//100으로 셋팅한 부분에 총 게시글 수를 구하는 로직을 넣었다.
		//총 게시글의 수를 세팅해준다.
		/* pageMaker.setTotalCount(freeBoardService.listCount(scri)); */
		// List list = freeBoardService.freeBoardList2();
		List<Map<String, Object>> list = freeBoardService.selectBoardList(cri);
		//원래의 목록 조회 로직에서 Criteria 파라미터를 사용하기 위해 수정했다.
		mav.addObject("pageMaker", pageMaker);
		//셋팅된 pageMaker에는 페이징을 위한 버튼의 값들이 들어있고 ModelAndView를 이용해 jsp에 넘겨준다.
		mav.addObject("list", list);
		mav.setViewName("boardMain");
		/* mav.addObject("freeBoardList",list); */
		return mav;
	}

	// 게시물 입력
	@RequestMapping("/freeBoardInsert.ino")
	public String freeBoardInsert() {
		return "freeBoardInsert";
	}

	// 게시물 입력 보내기
	@RequestMapping("/freeBoardInsertPro.ino")
	public String freeBoardInsertPro(HttpServletRequest request, FreeBoardDto dto) {
		ModelAndView mav = new ModelAndView();

		freeBoardService.freeBoardInsertPro(dto);

		System.out.println(dto.getNum());

		return "redirect:freeBoardDetail.ino?num=" + dto.getNum();
		// return "redirect:main.ino";
		// return "redirect:freeBoardDetail.ino?num="+dto.getNum();
	}

	// 게시물 자세히(수정,삭제 뷰페이지)
	@RequestMapping("/freeBoardDetail.ino")
	public ModelAndView freeBoardDetail(HttpServletRequest request) {

		System.out.println("처리전 num값" + request.getParameter("num"));

		int num = Integer.parseInt(request.getParameter("num"));
		FreeBoardDto dto = freeBoardService.getDetailByNum(num);

		System.out.println("처리전dto값" + dto.toString());

		return new ModelAndView("freeBoardDetail", "freeBoardDto", dto);
	}

	// 게시판 수정 보내기
	@RequestMapping(value = "/freeBoardUpdate.ino")
	public String freeBoardUpdate(FreeBoardDto dto, HttpServletRequest request) {
		freeBoardService.freeBoardUpdate(dto);
		System.out.println("수정후 dto값" + dto);
		return "redirect:/main.ino";
	}

	// 게시판 삭제
	@RequestMapping(value = "/freeBoardDelete.ino")
	public String freeBodardDelete(int num, HttpServletRequest request) throws Exception {
		FreeBoardDto dto = new FreeBoardDto();
		freeBoardService.freeBoardDelete(num);
		System.out.println("삭제후 dto값" + dto);
		System.out.println("삭제후num" + num);
		return "redirect:./main.ino";
	}
	// 게시판 수정 보내기

	/*
	 * @RequestMapping(value = "/update") public ModelAndView
	 * update(FreeBoardDto dto,int num){ freeBoardService.FreeBoardUpdate(dto);
	 * return "redirect:freeBoardDetail.ino?num="+dto.getNum(); }
	 */

	/*
	 * @RequestMapping(value="/freeBoardUpdate.ino",method={ RequestMethod.GET,
	 * RequestMethod.POST}) public ModelAndView FreeBoardUpdate(FreeBoardDto
	 * dto) throws Exception { System.out.println(dto.toString()); ModelAndView
	 * mv = new ModelAndView("foward:/freeBoardDetail.ino"); System.out.println(
	 * "!@# dto : " + dto.getNum()); mv.addObject("num",dto.getNum());
	 * freeBoardService.FreeBoardUpdate(dto); return mv; }
	 */
	/*
	 * // 회원 정보 수정 처리
	 *
	 * @RequestMapping("/freeBoardUpdate.ino") public String
	 * freeBoardUpdate(FreeBoardDto dto) {
	 * freeBoardService.FreeBoardUpdate(dto); return "redirect:main.ino"; }
	 */
	// 게시판 삭제
	// @RequestMapping(value = "/delete.ino")
	// public ModelAndView delete(FreeBoardDto dto) throws Exception {
	/*
	 * public ModelAndView delete( HttpServletRequest request) throws Exception
	 * { FreeBoardDto dto = new FreeBoardDto(); int num =
	 * Integer.parseInt(request.getParameter("num")); dto =
	 * freeBoardService.deleteBoard(dto.getNum());
	 * System.out.println("!(*@(@$삭제1"); System.out.print(dto.toString());
	 * System.out.println("!(*@(@$삭제2"); System.out.println(dto.getNum());
	 * ModelAndView mv = new ModelAndView("foward:./main.ino"); //
	 * mv.addObject("num",dto.getNum()); System.out.println("!(*@(@$삭제3");
	 * return mv; }
	 */

}
